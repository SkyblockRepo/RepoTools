// <auto-generated />
using HypixelAPI.DTOs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RepoAPI.Data;
using RepoAPI.Features.Wiki.Templates.ItemTemplate;

#nullable disable

namespace RepoAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250826013805_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RepoAPI.Features.Items.Models.SkyblockItem", b =>
                {
                    b.Property<string>("InternalId")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<ItemResponse>("Data")
                        .HasColumnType("jsonb");

                    b.Property<double>("NpcValue")
                        .HasColumnType("double precision");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<ItemTemplateDto>("TemplateData")
                        .HasColumnType("jsonb");

                    b.HasKey("InternalId");

                    b.ToTable("SkyblockItems");
                });

            modelBuilder.Entity("RepoAPI.Features.Pets.Models.SkyblockPet", b =>
                {
                    b.Property<string>("InternalId")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("RawTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<ItemTemplateDto>("TemplateData")
                        .HasColumnType("jsonb");

                    b.HasKey("InternalId");

                    b.ToTable("SkyblockPets");
                });

            modelBuilder.Entity("RepoAPI.Features.Items.Models.SkyblockItem", b =>
                {
                    b.OwnsOne("RepoAPI.Features.Items.Models.ItemFlags", "Flags", b1 =>
                        {
                            b1.Property<string>("SkyblockItemInternalId")
                                .HasColumnType("character varying(512)");

                            b1.Property<bool>("Auctionable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Bazaarable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Enchantable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Museumable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Reforgeable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Soulboundable")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Tradable")
                                .HasColumnType("boolean");

                            b1.HasKey("SkyblockItemInternalId");

                            b1.ToTable("SkyblockItems");

                            b1.WithOwner()
                                .HasForeignKey("SkyblockItemInternalId");
                        });

                    b.Navigation("Flags")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
